#!/usr/bin/env python

from __future__ import print_function

import os, sys, subprocess
sys.path.insert(0, os.path.join(os.path.dirname(os.path.realpath(__file__)), os.pardir, os.pardir, "common"))
import utils, driver

r = utils.import_python_driver()

if not os.path.isdir('run'):
	os.makedirs('run')

executable_path = sys.argv[1] if len(sys.argv) > 1 else utils.find_rethinkdb_executable()
os.environ['RDB_EXE_PATH'] = str(executable_path)

# get a group of 4 connected servers

with driver.Cluster.create_cluster(4, executable_path=executable_path) as cluster:
	
	server = list(cluster.processes)[0]
	conn = r.connect(server.host, server.driver_port)
	
	if not 'test' in r.db_list().run(conn):
		r.db_create('test').run(conn)
	if not 'test' in r.db('test').table_list().run(conn):
		r.db('test').table_create('test').run(conn)
	
	print("Running JS feeds")
	os.environ['RDB_DRIVER_PORT'] = str(server.driver_port)
	sys.exit(subprocess.call([os.environ.get('INTERPRETER_PATH', 'node'), os.path.join(os.path.dirname(__file__), 'feeds.js')]))
